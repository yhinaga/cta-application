{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf100
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww28300\viewh16280\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Yuki Hinaga, CS 201, Sec 01, Nov.12\
\
Phase 1: Project Design \
\
1. Describe the user interface. What are the menu options and how will the user use the application?\
\
The user interface will have the following menu options:\
1) Display the names of the stations.\
2) Display the wheelchair access\
3) Display the nearest station to a location\
4) Display information for a station with a specific name\
5) Display information for all stations\
6) Add a new station\
7) Delete an existing station\
8) Display the trains and the stations to another location\
9) Exit\
\
\
2. Describe the programmers\'92 tasks:\
1) to create object classes such as CTAStation and CTARoute, and a client class\
2) to test the client class so that each option functions properly\
\
3. Describe how you will read the input file.\
1) Create a file object\
2) Using a scanner, parse the file line by line\
\
4. Describe how you will process the data from the input file.\
Once the scanner reads a line, we split the line based on delimiter, parsing into respect to data type (String, double, int). We then create an object using these values.\
\
5. Describe how you will store the data.\
By using the collection data structure (array list), we can insert data as elements into the data structure.\
\
6. How will you add/delete/modify data?\
By using array list, we can update or remove the elements in the data structures.\
By modifying the object being referred from a data structure, we modify data. Using functions such as add or remove, we can add/delete elements from data structure. \
\
7. How will you search the data?\
Using searching method such as selection search. We iterate through the list containing data elements and search depending on a key for respect to element.\
\
8. List the classes you will need to implement your application.\
GeoLocation, CTAStation, CTARoute, and CTAStation_client\
\
9. Draw a UML diagram the shows all classes in the program and their relationships. This can be done however you want. \
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Screen Shot 2018-11-12 at 20.31.19.png \width14820 \height6920 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Screen Shot 2018-11-12 at 20.31.25.png \width9040 \height4460 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Screen Shot 2018-11-12 at 20.31.32.png \width10660 \height4140 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 10. Think how you will determine if your code functions are expected. Develop a test plan based on the above description; how will you test that the expected outputs have been achieved? Be sure this test plan is complete. Your test plan should minimally test each option in the menu-driven user interface for expected behavior and error-resistance.\
\
1. Display the name of the stations: test by comparing the output with the text file\
2. Display the wheelchair access: test by comparing the output with the text file\
3. Display the nearest station to a location: test by calculating the distance using the distance formula and by comparing the closest station with the output\
4. Display information for a station with a specific name: test by checking the output with the input and also by comparing the output with the text file.\
5. Display information for all stations: test by comparing the output with the text file.\
6. Add a new station: test by searching the name of the new station using the choice 4, by comparing the output with the input, and by checking the order (position) by comparing the output with the input using the choice 1.\
7. Delete an existing station: test by searching the name of the station deleted.\
8. Display the trains and the stations to another location: test by finding the nearest station from the current location and the nearest station from the destination and by checking the map to confirm the output is correct.\
9. Exit: test by entering exit or 9 and by checking the outcome.}